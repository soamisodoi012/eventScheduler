version: '3.8'

services:
  backend:
    build: ./backend
    command: ["/app/entrypoint.sh"]
    volumes:
      - ./backend:/app
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: eventdb
      POSTGRES_USER: eventuser
      POSTGRES_PASSWORD: eventpass
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventuser -d eventdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eventscheduler-nginx-1
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/staticfiles:/static
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
